{"id":"controller/auth/authentication.controller.js","dependencies":[{"name":"/Users/wolfzer44/www/vutiliti/package.json","includedInParent":true,"mtime":1584041049154},{"name":"../../models/Users","loc":{"line":1,"column":18},"parent":"/Users/wolfzer44/www/vutiliti/src/controller/auth/authentication.controller.js","resolved":"/Users/wolfzer44/www/vutiliti/src/models/Users.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.login = void 0;\n\nvar _Users = _interopRequireDefault(require(\"../../models/Users\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst login = async (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const user = await _Users.default.findOne({\n    username\n  });\n  console.log((await _bcrypt.default.compare(password, user.password)));\n  if (!(await _bcrypt.default.compare(password, user.password))) return res.status(401).json({\n    message: 'Invalid credentials'\n  });\n  const token = await _jsonwebtoken.default.sign({\n    id: user.id,\n    username: user.username\n  }, '8hgkgvrdrq', {\n    expiresIn: '7d'\n  });\n  return res.status(200).json({\n    token,\n    user_id: user.id\n  });\n};\n\nexports.login = login;"},"sourceMaps":null,"error":null,"hash":"44baadd8a54db2f8149887efa6eee45d","cacheData":{"env":{}}}